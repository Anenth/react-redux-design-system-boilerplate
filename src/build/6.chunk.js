(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{528:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./node_modules/react-helmet/lib/Helmet.js\nvar Helmet = __webpack_require__(155);\n\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 12 modules\nvar index_es = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/lib/index.js\nvar lib = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./node_modules/redux/lib/redux.js\nvar redux = __webpack_require__(36);\n\n// EXTERNAL MODULE: ./node_modules/reselect/es/index.js\nvar es = __webpack_require__(53);\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(154);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(61);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(521);\n\n// CONCATENATED MODULE: ./app/utils/checkStore.js\n\n\n/**\n * Validate the shape of redux store\n */\n\nfunction checkStore(store) {\n  var shape = {\n    dispatch: lodash["isFunction"],\n    subscribe: lodash["isFunction"],\n    getState: lodash["isFunction"],\n    replaceReducer: lodash["isFunction"],\n    runSaga: lodash["isFunction"],\n    injectedReducers: lodash["isObject"],\n    injectedSagas: lodash["isObject"]\n  };\n  browser_default()(Object(lodash["conformsTo"])(store, shape), \'(app/utils...) injectors: Expected a valid redux store\');\n}\n// EXTERNAL MODULE: ./app/reducers.js\nvar reducers = __webpack_require__(78);\n\n// CONCATENATED MODULE: ./app/utils/reducerInjectors.js\n\n\n\n\nfunction injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n    browser_default()(Object(lodash["isString"])(key) && !Object(lodash["isEmpty"])(key) && Object(lodash["isFunction"])(reducer), \'(app/utils...) injectReducer: Expected `reducer` to be a reducer function\'); // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\n    store.replaceReducer(Object(reducers["default"])(store.injectedReducers));\n  };\n}\nfunction getInjectors(store) {\n  checkStore(store);\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}\n// CONCATENATED MODULE: ./app/utils/injectReducer.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\n\n/* harmony default export */ var utils_injectReducer = (function (_ref) {\n  var key = _ref.key,\n      reducer = _ref.reducer;\n  return function (WrappedComponent) {\n    var ReducerInjector =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ReducerInjector, _React$Component);\n\n      function ReducerInjector(props, context) {\n        var _this;\n\n        _classCallCheck(this, ReducerInjector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReducerInjector).call(this, props, context));\n        getInjectors(context.store).injectReducer(key, reducer);\n        return _this;\n      }\n\n      _createClass(ReducerInjector, [{\n        key: "render",\n        value: function render() {\n          return react_default.a.createElement(WrappedComponent, this.props);\n        }\n      }]);\n\n      return ReducerInjector;\n    }(react_default.a.Component);\n\n    _defineProperty(ReducerInjector, "WrappedComponent", WrappedComponent);\n\n    _defineProperty(ReducerInjector, "contextType", lib["ReactReduxContext"]);\n\n    _defineProperty(ReducerInjector, "displayName", "withReducer(".concat(WrappedComponent.displayName || WrappedComponent.name || \'Component\', ")"));\n\n    return hoist_non_react_statics_cjs_default()(ReducerInjector, WrappedComponent);\n  };\n});\n\nvar injectReducer_useInjectReducer = function useInjectReducer(_ref2) {\n  var key = _ref2.key,\n      reducer = _ref2.reducer;\n  var context = react_default.a.useContext(lib["ReactReduxContext"]);\n  react_default.a.useEffect(function () {\n    getInjectors(context.store).injectReducer(key, reducer);\n  }, []);\n};\n\n\n// CONCATENATED MODULE: ./app/utils/constants.js\nvar RESTART_ON_REMOUNT = \'@@saga-injector/restart-on-remount\';\nvar DAEMON = \'@@saga-injector/daemon\';\nvar ONCE_TILL_UNMOUNT = \'@@saga-injector/once-till-unmount\';\n// CONCATENATED MODULE: ./app/utils/sagaInjectors.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { sagaInjectors_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction sagaInjectors_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nvar sagaInjectors_checkKey = function checkKey(key) {\n  return browser_default()(Object(lodash["isString"])(key) && !Object(lodash["isEmpty"])(key), \'(app/utils...) injectSaga: Expected `key` to be a non empty string\');\n};\n\nvar sagaInjectors_checkDescriptor = function checkDescriptor(descriptor) {\n  var shape = {\n    saga: lodash["isFunction"],\n    mode: function mode(_mode) {\n      return Object(lodash["isString"])(_mode) && allowedModes.includes(_mode);\n    }\n  };\n  browser_default()(Object(lodash["conformsTo"])(descriptor, shape), \'(app/utils...) injectSaga: Expected a valid saga descriptor\');\n};\n\nfunction injectSagaFactory(store, isValid) {\n  return function injectSaga(key) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var args = arguments.length > 2 ? arguments[2] : undefined;\n    if (!isValid) checkStore(store);\n\n    var newDescriptor = _objectSpread({}, descriptor, {\n      mode: descriptor.mode || DAEMON\n    });\n\n    var saga = newDescriptor.saga,\n        mode = newDescriptor.mode;\n    sagaInjectors_checkKey(key);\n    sagaInjectors_checkDescriptor(newDescriptor);\n    var hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (false) { var oldDescriptor; }\n\n    if (!hasSaga || hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = _objectSpread({}, newDescriptor, {\n        task: store.runSaga(saga, args)\n      });\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\nfunction ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n    sagaInjectors_checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      var descriptor = store.injectedSagas[key];\n\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel(); // Clean up in production; in development we need `descriptor.saga` for hot reloading\n\n        if (true) {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = \'done\'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\nfunction sagaInjectors_getInjectors(store) {\n  checkStore(store);\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n// CONCATENATED MODULE: ./app/utils/injectSaga.js\nfunction injectSaga_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { injectSaga_typeof = function _typeof(obj) { return typeof obj; }; } else { injectSaga_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return injectSaga_typeof(obj); }\n\nfunction injectSaga_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction injectSaga_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction injectSaga_createClass(Constructor, protoProps, staticProps) { if (protoProps) injectSaga_defineProperties(Constructor.prototype, protoProps); if (staticProps) injectSaga_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction injectSaga_possibleConstructorReturn(self, call) { if (call && (injectSaga_typeof(call) === "object" || typeof call === "function")) { return call; } return injectSaga_assertThisInitialized(self); }\n\nfunction injectSaga_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction injectSaga_getPrototypeOf(o) { injectSaga_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return injectSaga_getPrototypeOf(o); }\n\nfunction injectSaga_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) injectSaga_setPrototypeOf(subClass, superClass); }\n\nfunction injectSaga_setPrototypeOf(o, p) { injectSaga_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return injectSaga_setPrototypeOf(o, p); }\n\nfunction injectSaga_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/**\n * Dynamically injects a saga, passes component\'s props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like \'RESTART_ON_REMOUNT\' but never runs it again.\n *\n */\n\n/* harmony default export */ var utils_injectSaga = (function (_ref) {\n  var key = _ref.key,\n      saga = _ref.saga,\n      mode = _ref.mode;\n  return function (WrappedComponent) {\n    var InjectSaga =\n    /*#__PURE__*/\n    function (_React$Component) {\n      injectSaga_inherits(InjectSaga, _React$Component);\n\n      function InjectSaga(props, context) {\n        var _this;\n\n        injectSaga_classCallCheck(this, InjectSaga);\n\n        _this = injectSaga_possibleConstructorReturn(this, injectSaga_getPrototypeOf(InjectSaga).call(this, props, context));\n        _this.injectors = sagaInjectors_getInjectors(context.store);\n\n        _this.injectors.injectSaga(key, {\n          saga: saga,\n          mode: mode\n        }, _this.props);\n\n        return _this;\n      }\n\n      injectSaga_createClass(InjectSaga, [{\n        key: "componentWillUnmount",\n        value: function componentWillUnmount() {\n          this.injectors.ejectSaga(key);\n        }\n      }, {\n        key: "render",\n        value: function render() {\n          return react_default.a.createElement(WrappedComponent, this.props);\n        }\n      }]);\n\n      return InjectSaga;\n    }(react_default.a.Component);\n\n    injectSaga_defineProperty(InjectSaga, "WrappedComponent", WrappedComponent);\n\n    injectSaga_defineProperty(InjectSaga, "contextType", lib["ReactReduxContext"]);\n\n    injectSaga_defineProperty(InjectSaga, "displayName", "withSaga(".concat(WrappedComponent.displayName || WrappedComponent.name || \'Component\', ")"));\n\n    return hoist_non_react_statics_cjs_default()(InjectSaga, WrappedComponent);\n  };\n});\n\nvar injectSaga_useInjectSaga = function useInjectSaga(_ref2) {\n  var key = _ref2.key,\n      saga = _ref2.saga,\n      mode = _ref2.mode;\n  var context = react_default.a.useContext(lib["ReactReduxContext"]);\n  react_default.a.useEffect(function () {\n    var injectors = sagaInjectors_getInjectors(context.store);\n    injectors.injectSaga(key, {\n      saga: saga,\n      mode: mode\n    });\n    return function () {\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\n\n// EXTERNAL MODULE: ./app/containers/App/reducer.js\nvar App_reducer = __webpack_require__(212);\n\n// CONCATENATED MODULE: ./app/containers/App/selectors.js\n/**\n * The global state selectors\n */\n\n\n\nvar selectors_selectGlobal = function selectGlobal(state) {\n  return state.global || App_reducer["b" /* initialState */];\n};\n\nvar selectRouter = function selectRouter(state) {\n  return state.router;\n};\n\nvar selectors_makeSelectCurrentUser = function makeSelectCurrentUser() {\n  return Object(es["a" /* createSelector */])(selectors_selectGlobal, function (globalState) {\n    return globalState.currentUser;\n  });\n};\n\nvar selectors_makeSelectLoading = function makeSelectLoading() {\n  return Object(es["a" /* createSelector */])(selectors_selectGlobal, function (globalState) {\n    return globalState.loading;\n  });\n};\n\nvar selectors_makeSelectError = function makeSelectError() {\n  return Object(es["a" /* createSelector */])(selectors_selectGlobal, function (globalState) {\n    return globalState.error;\n  });\n};\n\nvar selectors_makeSelectRepos = function makeSelectRepos() {\n  return Object(es["a" /* createSelector */])(selectors_selectGlobal, function (globalState) {\n    return globalState.userData.repositories;\n  });\n};\n\nvar selectors_makeSelectLocation = function makeSelectLocation() {\n  return Object(es["a" /* createSelector */])(selectRouter, function (routerState) {\n    return routerState.location;\n  });\n};\n\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(7);\n\n// CONCATENATED MODULE: ./app/components/H2/index.js\n\nvar H2 = styled_components_browser_esm["b" /* default */].h2.withConfig({\n  displayName: "H2",\n  componentId: "vdwdcr-0"\n})(["font-size:1.5em;"]);\n/* harmony default export */ var components_H2 = (H2);\n// CONCATENATED MODULE: ./app/components/List/Ul.js\n\nvar Ul = styled_components_browser_esm["b" /* default */].ul.withConfig({\n  displayName: "Ul",\n  componentId: "sc-1u9mio3-0"\n})(["list-style:none;margin:0;width:100%;max-height:30em;overflow-y:auto;padding:0 1em;"]);\n/* harmony default export */ var List_Ul = (Ul);\n// CONCATENATED MODULE: ./app/components/List/Wrapper.js\n\nvar Wrapper = styled_components_browser_esm["b" /* default */].div.withConfig({\n  displayName: "Wrapper",\n  componentId: "jnta8g-0"\n})(["padding:0;margin:0;width:100%;background-color:white;border:1px solid #ccc;border-radius:3px;overflow:hidden;"]);\n/* harmony default export */ var List_Wrapper = (Wrapper);\n// CONCATENATED MODULE: ./app/components/List/index.js\n\n\n\n\n\nfunction List(props) {\n  var ComponentToRender = props.component;\n  var content = react_default.a.createElement("div", null); // If we have items, render them\n\n  if (props.items) {\n    content = props.items.map(function (item) {\n      return react_default.a.createElement(ComponentToRender, {\n        key: "item-".concat(item.id),\n        item: item\n      });\n    });\n  } else {\n    // Otherwise render a single component\n    content = react_default.a.createElement(ComponentToRender, null);\n  }\n\n  return react_default.a.createElement(List_Wrapper, null, react_default.a.createElement(List_Ul, null, content));\n}\n\nList.propTypes = {\n  component: prop_types_default.a.elementType.isRequired,\n  items: prop_types_default.a.array\n};\n/* harmony default export */ var components_List = (List);\n// CONCATENATED MODULE: ./app/components/ListItem/Item.js\n\nvar Item = styled_components_browser_esm["b" /* default */].div.withConfig({\n  displayName: "Item",\n  componentId: "sc-1yikt1k-0"\n})(["display:flex;justify-content:space-between;width:100%;height:100%;align-items:center;"]);\n/* harmony default export */ var ListItem_Item = (Item);\n// CONCATENATED MODULE: ./app/components/ListItem/Wrapper.js\n\nvar Wrapper_Wrapper = styled_components_browser_esm["b" /* default */].li.withConfig({\n  displayName: "Wrapper",\n  componentId: "kholvi-0"\n})(["width:100%;height:3em;display:flex;align-items:center;position:relative;border-top:1px solid #eee;&:first-child{border-top:none;}"]);\n/* harmony default export */ var ListItem_Wrapper = (Wrapper_Wrapper);\n// CONCATENATED MODULE: ./app/components/ListItem/index.js\n\n\n\n\n\nfunction ListItem(props) {\n  return react_default.a.createElement(ListItem_Wrapper, null, react_default.a.createElement(ListItem_Item, null, props.item));\n}\n\nListItem.propTypes = {\n  item: prop_types_default.a.any\n};\n/* harmony default export */ var components_ListItem = (ListItem);\n// EXTERNAL MODULE: ./app/components/LoadingIndicator/index.js + 2 modules\nvar LoadingIndicator = __webpack_require__(63);\n\n// CONCATENATED MODULE: ./app/components/IssueIcon/index.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\nfunction IssueIcon(props) {\n  return react_default.a.createElement("svg", _extends({\n    height: "1em",\n    width: "0.875em",\n    className: props.className\n  }, props), react_default.a.createElement("path", {\n    d: "M7 2.3c3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8s2.56-5.7 5.7-5.7m0-1.3C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7S10.86 1 7 1z m1 3H6v5h2V4z m0 6H6v2h2V10z"\n  }));\n}\n\nIssueIcon.propTypes = {\n  className: prop_types_default.a.string\n};\n/* harmony default export */ var components_IssueIcon = (IssueIcon);\n// CONCATENATED MODULE: ./app/containers/RepoListItem/IssueIcon.js\n\n\nvar IssueIcon_IssueIcon = Object(styled_components_browser_esm["b" /* default */])(components_IssueIcon).withConfig({\n  displayName: "IssueIcon",\n  componentId: "sc-18er2fy-0"\n})(["fill:#ccc;margin-right:0.25em;"]);\n/* harmony default export */ var RepoListItem_IssueIcon = (IssueIcon_IssueIcon);\n// EXTERNAL MODULE: ./app/components/A/index.js\nvar A = __webpack_require__(99);\n\n// CONCATENATED MODULE: ./app/containers/RepoListItem/IssueLink.js\n\n\nvar IssueLink = Object(styled_components_browser_esm["b" /* default */])(A["a" /* default */]).withConfig({\n  displayName: "IssueLink",\n  componentId: "sc-1sjpuey-0"\n})(["height:100%;color:black;display:flex;align-items:center;justify-content:center;white-space:nowrap;"]);\n/* harmony default export */ var RepoListItem_IssueLink = (IssueLink);\n// CONCATENATED MODULE: ./app/containers/RepoListItem/RepoLink.js\n\n\nvar RepoLink = Object(styled_components_browser_esm["b" /* default */])(A["a" /* default */]).withConfig({\n  displayName: "RepoLink",\n  componentId: "w6nciw-0"\n})(["height:100%;color:black;display:flex;align-items:center;width:100%;"]);\n/* harmony default export */ var RepoListItem_RepoLink = (RepoLink);\n// CONCATENATED MODULE: ./app/containers/RepoListItem/Wrapper.js\n\nvar RepoListItem_Wrapper_Wrapper = styled_components_browser_esm["b" /* default */].div.withConfig({\n  displayName: "Wrapper",\n  componentId: "ikc23h-0"\n})(["width:100%;height:100%;display:flex;align-items:space-between;"]);\n/* harmony default export */ var RepoListItem_Wrapper = (RepoListItem_Wrapper_Wrapper);\n// CONCATENATED MODULE: ./app/containers/RepoListItem/index.js\n/**\n * RepoListItem\n *\n * Lists the name and the issue count of a repository\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction RepoListItem(props) {\n  var item = props.item;\n  var nameprefix = \'\'; // If the repository is owned by a different person than we got the data for\n  // it\'s a fork and we should show the name of the owner\n\n  if (item.owner.login !== props.currentUser) {\n    nameprefix = "".concat(item.owner.login, "/");\n  } // Put together the content of the repository\n\n\n  var content = react_default.a.createElement(RepoListItem_Wrapper, null, react_default.a.createElement(RepoListItem_RepoLink, {\n    href: item.html_url,\n    target: "_blank"\n  }, nameprefix + item.name), react_default.a.createElement(RepoListItem_IssueLink, {\n    href: "".concat(item.html_url, "/issues"),\n    target: "_blank"\n  }, react_default.a.createElement(RepoListItem_IssueIcon, null), react_default.a.createElement(index_es["FormattedNumber"], {\n    value: item.open_issues_count\n  }))); // Render the content into a list item\n\n  return react_default.a.createElement(components_ListItem, {\n    key: "repo-list-item-".concat(item.full_name),\n    item: content\n  });\n}\nRepoListItem.propTypes = {\n  item: prop_types_default.a.object,\n  currentUser: prop_types_default.a.string\n};\n/* harmony default export */ var containers_RepoListItem = (Object(lib["connect"])(Object(es["b" /* createStructuredSelector */])({\n  currentUser: selectors_makeSelectCurrentUser()\n}))(RepoListItem));\n// CONCATENATED MODULE: ./app/components/ReposList/index.js\n\n\n\n\n\n\n\nfunction ReposList(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      repos = _ref.repos;\n\n  if (loading) {\n    return react_default.a.createElement(components_List, {\n      component: LoadingIndicator["a" /* default */]\n    });\n  }\n\n  if (error !== false) {\n    var ErrorComponent = function ErrorComponent() {\n      return react_default.a.createElement(components_ListItem, {\n        item: "Something went wrong, please try again!"\n      });\n    };\n\n    return react_default.a.createElement(components_List, {\n      component: ErrorComponent\n    });\n  }\n\n  if (repos !== false) {\n    return react_default.a.createElement(components_List, {\n      items: repos,\n      component: containers_RepoListItem\n    });\n  }\n\n  return null;\n}\n\nReposList.propTypes = {\n  loading: prop_types_default.a.bool,\n  error: prop_types_default.a.any,\n  repos: prop_types_default.a.any\n};\n/* harmony default export */ var components_ReposList = (ReposList);\n// CONCATENATED MODULE: ./app/containers/HomePage/AtPrefix.js\n\nvar AtPrefix = styled_components_browser_esm["b" /* default */].span.withConfig({\n  displayName: "AtPrefix",\n  componentId: "sc-9w7qo7-0"\n})(["color:black;margin-left:0.4em;"]);\n/* harmony default export */ var HomePage_AtPrefix = (AtPrefix);\n// CONCATENATED MODULE: ./app/containers/HomePage/Section.js\n\nvar Section = styled_components_browser_esm["b" /* default */].section.withConfig({\n  displayName: "Section",\n  componentId: "sc-1bnnmzx-0"\n})(["margin:3em auto;&:first-child{margin-top:0;}"]);\n/* harmony default export */ var HomePage_Section = (Section);\n// CONCATENATED MODULE: ./app/containers/HomePage/CenteredSection.js\n\n\nvar CenteredSection = Object(styled_components_browser_esm["b" /* default */])(HomePage_Section).withConfig({\n  displayName: "CenteredSection",\n  componentId: "sc-1cevrkq-0"\n})(["text-align:center;"]);\n/* harmony default export */ var HomePage_CenteredSection = (CenteredSection);\n// CONCATENATED MODULE: ./app/containers/HomePage/Form.js\n\nvar Form = styled_components_browser_esm["b" /* default */].form.withConfig({\n  displayName: "Form",\n  componentId: "sc-2pt0vl-0"\n})(["margin-bottom:1em;"]);\n/* harmony default export */ var HomePage_Form = (Form);\n// CONCATENATED MODULE: ./app/containers/HomePage/Input.js\n\nvar Input = styled_components_browser_esm["b" /* default */].input.withConfig({\n  displayName: "Input",\n  componentId: "sc-1mwg3ig-0"\n})(["outline:none;border:none;border-bottom:1px dotted #999;background-color:transparent;"]);\n/* harmony default export */ var HomePage_Input = (Input);\n// CONCATENATED MODULE: ./app/containers/HomePage/messages.js\n/*\n * HomePage Messages\n *\n * This contains all the text for the HomePage component.\n */\n\nvar scope = \'boilerplate.containers.HomePage\';\n/* harmony default export */ var messages = (Object(index_es["defineMessages"])({\n  startProjectHeader: {\n    id: "".concat(scope, ".start_project.header"),\n    defaultMessage: \'Start your next react project in seconds\'\n  },\n  startProjectMessage: {\n    id: "".concat(scope, ".start_project.message"),\n    defaultMessage: \'A highly scalable, offline-first foundation with the best DX and a focus on performance and best practices\'\n  },\n  trymeHeader: {\n    id: "".concat(scope, ".tryme.header"),\n    defaultMessage: \'Try me!\'\n  },\n  trymeMessage: {\n    id: "".concat(scope, ".tryme.message"),\n    defaultMessage: \'Show Github repositories by\'\n  },\n  trymeAtPrefix: {\n    id: "".concat(scope, ".tryme.atPrefix"),\n    defaultMessage: \'@\'\n  }\n}));\n// EXTERNAL MODULE: ./app/containers/App/constants.js\nvar constants = __webpack_require__(103);\n\n// CONCATENATED MODULE: ./app/containers/App/actions.js\n/*\n * App Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export function yourAction(var) {\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\n *    }\n */\n\n/**\n * Load the repositories, this action starts the request saga\n *\n * @return {object} An action object with a type of LOAD_REPOS\n */\n\nfunction loadRepos() {\n  return {\n    type: constants["a" /* LOAD_REPOS */]\n  };\n}\n/**\n * Dispatched when the repositories are loaded by the request saga\n *\n * @param  {array} repos The repository data\n * @param  {string} username The current username\n *\n * @return {object}      An action object with a type of LOAD_REPOS_SUCCESS passing the repos\n */\n\nfunction reposLoaded(repos, username) {\n  return {\n    type: constants["c" /* LOAD_REPOS_SUCCESS */],\n    repos: repos,\n    username: username\n  };\n}\n/**\n * Dispatched when loading the repositories fails\n *\n * @param  {object} error The error\n *\n * @return {object}       An action object with a type of LOAD_REPOS_ERROR passing the error\n */\n\nfunction repoLoadingError(error) {\n  return {\n    type: constants["b" /* LOAD_REPOS_ERROR */],\n    error: error\n  };\n}\n// CONCATENATED MODULE: ./app/containers/HomePage/constants.js\n/*\n * HomeConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with \'yourproject/YourComponent\' so we avoid\n * reducers accidentally picking up actions they shouldn\'t.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = \'yourproject/YourContainer/YOUR_ACTION_CONSTANT\';\n */\nvar CHANGE_USERNAME = \'boilerplate/Home/CHANGE_USERNAME\';\n// CONCATENATED MODULE: ./app/containers/HomePage/actions.js\n/*\n * Home Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export function yourAction(var) {\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\n *    }\n */\n\n/**\n * Changes the input field of the form\n *\n * @param  {string} username The new text of the input field\n *\n * @return {object} An action object with a type of CHANGE_USERNAME\n */\n\nfunction changeUsername(username) {\n  return {\n    type: CHANGE_USERNAME,\n    username: username\n  };\n}\n// EXTERNAL MODULE: ./node_modules/immer/dist/immer.module.js\nvar immer_module = __webpack_require__(102);\n\n// CONCATENATED MODULE: ./app/containers/HomePage/reducer.js\n/*\n * HomeReducer\n *\n * The reducer takes care of our data. Using actions, we can\n * update our application state. To add a new action,\n * add it to the switch statement in the reducer function\n *\n */\n\n // The initial state of the App\n\nvar initialState = {\n  username: \'\'\n};\n/* eslint-disable default-case, no-param-reassign */\n\nvar reducer_homeReducer = function homeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return Object(immer_module["a" /* default */])(state, function (draft) {\n    switch (action.type) {\n      case CHANGE_USERNAME:\n        // Delete prefixed \'@\' from the github username\n        draft.username = action.username.replace(/@/gi, \'\');\n        break;\n    }\n  });\n};\n\n/* harmony default export */ var HomePage_reducer = (reducer_homeReducer);\n// CONCATENATED MODULE: ./app/containers/HomePage/selectors.js\n/**\n * Homepage selectors\n */\n\n\n\nvar selectors_selectHome = function selectHome(state) {\n  return state.home || initialState;\n};\n\nvar selectors_makeSelectUsername = function makeSelectUsername() {\n  return Object(es["a" /* createSelector */])(selectors_selectHome, function (homeState) {\n    return homeState.username;\n  });\n};\n\n\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.cjs.js\nvar redux_saga_effects_npm_proxy_cjs = __webpack_require__(525);\n\n// CONCATENATED MODULE: ./app/utils/request.js\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n\n  return response.json();\n}\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\n\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  var error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to "fetch"\n *\n * @return {object}           The response data\n */\n\n\nfunction request(url, options) {\n  return fetch(url, options).then(checkStatus).then(parseJSON);\n}\n// CONCATENATED MODULE: ./app/containers/HomePage/saga.js\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(getRepos),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(githubData);\n\n/**\n * Gets the repositories of the user from Github\n */\n\n\n\n\n\n/**\n * Github repos request/response handler\n */\n\nfunction getRepos() {\n  var username, requestURL, repos;\n  return regeneratorRuntime.wrap(function getRepos$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return Object(redux_saga_effects_npm_proxy_cjs["select"])(selectors_makeSelectUsername());\n\n        case 2:\n          username = _context.sent;\n          requestURL = "https://api.github.com/users/".concat(username, "/repos?type=all&sort=updated");\n          _context.prev = 4;\n          _context.next = 7;\n          return Object(redux_saga_effects_npm_proxy_cjs["call"])(request, requestURL);\n\n        case 7:\n          repos = _context.sent;\n          _context.next = 10;\n          return Object(redux_saga_effects_npm_proxy_cjs["put"])(reposLoaded(repos, username));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context["catch"](4);\n          _context.next = 16;\n          return Object(redux_saga_effects_npm_proxy_cjs["put"])(repoLoadingError(_context.t0));\n\n        case 16:\n        case "end":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 12]]);\n}\n/**\n * Root saga manages watcher lifecycle\n */\n\nfunction githubData() {\n  return regeneratorRuntime.wrap(function githubData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return Object(redux_saga_effects_npm_proxy_cjs["takeLatest"])(constants["a" /* LOAD_REPOS */], getRepos);\n\n        case 2:\n        case "end":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n// CONCATENATED MODULE: ./app/containers/HomePage/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomePage", function() { return HomePage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapDispatchToProps", function() { return mapDispatchToProps; });\n/*\n * HomePage\n *\n * This is the first thing users see of our App, at the \'/\' route\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar HomePage_key = \'home\';\nfunction HomePage(_ref) {\n  var username = _ref.username,\n      loading = _ref.loading,\n      error = _ref.error,\n      repos = _ref.repos,\n      onSubmitForm = _ref.onSubmitForm,\n      onChangeUsername = _ref.onChangeUsername;\n  injectReducer_useInjectReducer({\n    key: HomePage_key,\n    reducer: HomePage_reducer\n  });\n  injectSaga_useInjectSaga({\n    key: HomePage_key,\n    saga: githubData\n  });\n  Object(react["useEffect"])(function () {\n    // When initial state username is not null, submit the form to load repos\n    if (username && username.trim().length > 0) onSubmitForm();\n  }, []);\n  var reposListProps = {\n    loading: loading,\n    error: error,\n    repos: repos\n  };\n  return react_default.a.createElement("article", null, react_default.a.createElement(Helmet["Helmet"], null, react_default.a.createElement("title", null, "Home Page"), react_default.a.createElement("meta", {\n    name: "description",\n    content: "A React.js Boilerplate application homepage"\n  })), react_default.a.createElement("div", null, react_default.a.createElement(HomePage_CenteredSection, null, react_default.a.createElement(components_H2, null, react_default.a.createElement(index_es["FormattedMessage"], messages.startProjectHeader)), react_default.a.createElement("p", null, react_default.a.createElement(index_es["FormattedMessage"], messages.startProjectMessage))), react_default.a.createElement(HomePage_Section, null, react_default.a.createElement(components_H2, null, react_default.a.createElement(index_es["FormattedMessage"], messages.trymeHeader)), react_default.a.createElement(HomePage_Form, {\n    onSubmit: onSubmitForm\n  }, react_default.a.createElement("label", {\n    htmlFor: "username"\n  }, react_default.a.createElement(index_es["FormattedMessage"], messages.trymeMessage), react_default.a.createElement(HomePage_AtPrefix, null, react_default.a.createElement(index_es["FormattedMessage"], messages.trymeAtPrefix)), react_default.a.createElement(HomePage_Input, {\n    id: "username",\n    type: "text",\n    placeholder: "mxstbr",\n    value: username,\n    onChange: onChangeUsername\n  }))), react_default.a.createElement(components_ReposList, reposListProps))));\n}\nHomePage.propTypes = {\n  loading: prop_types_default.a.bool,\n  error: prop_types_default.a.oneOfType([prop_types_default.a.object, prop_types_default.a.bool]),\n  repos: prop_types_default.a.oneOfType([prop_types_default.a.array, prop_types_default.a.bool]),\n  onSubmitForm: prop_types_default.a.func,\n  username: prop_types_default.a.string,\n  onChangeUsername: prop_types_default.a.func\n};\nvar mapStateToProps = Object(es["b" /* createStructuredSelector */])({\n  repos: selectors_makeSelectRepos(),\n  username: selectors_makeSelectUsername(),\n  loading: selectors_makeSelectLoading(),\n  error: selectors_makeSelectError()\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChangeUsername: function onChangeUsername(evt) {\n      return dispatch(changeUsername(evt.target.value));\n    },\n    onSubmitForm: function onSubmitForm(evt) {\n      if (evt !== undefined && evt.preventDefault) evt.preventDefault();\n      dispatch(loadRepos());\n    }\n  };\n}\nvar withConnect = Object(lib["connect"])(mapStateToProps, mapDispatchToProps);\n/* harmony default export */ var containers_HomePage = __webpack_exports__["default"] = (Object(redux["compose"])(withConnect, react["memo"])(HomePage));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///528\n')}}]);